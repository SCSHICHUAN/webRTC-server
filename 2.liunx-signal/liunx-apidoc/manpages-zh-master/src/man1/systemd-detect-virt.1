'\" t
.TH "SYSTEMD\-DETECT\-VIRT" "1" "" "systemd 231" "systemd-detect-virt"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-detect-virt \- 检测虚拟化环境
.SH "SYNOPSIS"
.HP \w'\fBsystemd\-detect\-virt\ \fR\fB[OPTIONS...]\fR\ 'u
\fBsystemd\-detect\-virt \fR\fB[OPTIONS...]\fR
.SH "描述"
.PP
\fBsystemd\-detect\-virt\fR
用于检测 系统的运行环境是否为虚拟化环境， 以及更进一步检测是哪种虚拟化环境， 比如是哪种虚拟机或哪种容器。systemd\-detect\-virt
会在检测成功时返回 0 值， 而在检测失败时返回非零值。 默认检测所有虚拟化类型，但是通过
\fB\-\-container\fR
与
\fB\-\-vm\fR
选项， 也可以指定仅检测特定的虚拟化类型。
.PP
如果未指定
\fB\-\-quiet\fR
选项， 那么将会显示检测到的虚拟化技术的简短标识。 可以识别的虚拟化技术如下：
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \& 可识别的虚拟化技术
.TS
allbox tab(:);
lB lB lB.
T{
Type
T}:T{
ID
T}:T{
Product
T}
.T&
lt l l
^ l l
^ l l
^ l l
^ l l
^ l l
^ l l
^ l l
^ l l
^ l l
lt l l
^ l l
^ l l
^ l l
^ l l
^ l l.
T{
虚拟机
T}:T{
\fIqemu\fR
T}:T{
QEMU 软件虚拟机
T}
:T{
\fIkvm\fR
T}:T{
Linux 内核虚拟机
T}
:T{
\fIzvm\fR
T}:T{
s390 z/VM
T}
:T{
\fIvmware\fR
T}:T{
VMware 虚拟机
T}
:T{
\fImicrosoft\fR
T}:T{
Hyper\-V 虚拟机
T}
:T{
\fIoracle\fR
T}:T{
Oracle VirtualBox 虚拟机
T}
:T{
\fIxen\fR
T}:T{
Xen 虚拟机(仅 domU, 非 dom0)
T}
:T{
\fIbochs\fR
T}:T{
Bochs 模拟器
T}
:T{
\fIuml\fR
T}:T{
User\-mode Linux
T}
:T{
\fIparallels\fR
T}:T{
Parallels Desktop, Parallels Server
T}
T{
容器
T}:T{
\fIopenvz\fR
T}:T{
OpenVZ/Virtuozzo
T}
:T{
\fIlxc\fR
T}:T{
LXC 容器
T}
:T{
\fIlxc\-libvirt\fR
T}:T{
通过 libvirt 实现的容器
T}
:T{
\fIsystemd\-nspawn\fR
T}:T{
systemd 最简容器(详见 \fBsystemd-nspawn\fR(1))
T}
:T{
\fIdocker\fR
T}:T{
Docker 容器
T}
:T{
\fIrkt\fR
T}:T{
rkt 应用容器
T}
.TE
.sp 1
.PP
如果使用了多重虚拟化， 那么将只能检测到"最内层"的虚拟化技术。 例如，在虚拟机内的容器中运行时， 将只能检测到容器(除非明确使用了
\fB\-\-vm\fR
选项)。
.SH "选项"
.PP
能够识别的命令行选项如下：
.PP
\fB\-c\fR, \fB\-\-container\fR
.RS 4
仅检测容器(共享内核虚拟化)
.RE
.PP
\fB\-v\fR, \fB\-\-vm\fR
.RS 4
仅检测虚拟机(虚拟化硬件)
.RE
.PP
\fB\-r\fR, \fB\-\-chroot\fR
.RS 4
检测是否运行在
\fBchroot\fR(2)
环境中。在此模式下，没有任何输出， 而是通过返回值表示是否运行在
\fBchroot()\fR
环境中。
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
禁止输出虚拟化技术的简短标识。
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
显示简短的帮助信息并退出。
.RE
.PP
\fB\-\-version\fR
.RS 4
显示简短的版本信息并退出。
.RE
.SH "退出状态"
.PP
返回值为 0 表示成功， 非零返回值表示失败代码。
.SH "参见"
.PP
\fBsystemd\fR(1),
\fBsystemd-nspawn\fR(1),
\fBchroot\fR(2)
.\" manpages-zh translator: 金步国
.\" manpages-zh comment: 金步国作品集：http://www.jinbuguo.com
